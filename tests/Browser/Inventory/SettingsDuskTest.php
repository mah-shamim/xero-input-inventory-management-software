<?php

namespace Tests\Browser\Inventory;

use App\Models\Setting;
use Laravel\Dusk\Browser;
use Tests\DuskTestCase;

class SettingsDuskTest extends DuskTestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = $this->seed_and_getUser();
        $this->page = '/inventory/settings';
    }

    /**
     * @test
     */
    public function index_settings(): void
    {
        $this->browse(function (Browser $browser) {
            $browser->loginAs($this->user)->visit($this->page)
                ->assertSee('Settings');
        });
    }

    /**
     * @test
     */
    public function create_settings(): void
    {
        Setting::factory()->create(['company_id' => $this->user->company_id]);
        $this->browse(function (Browser $browser) {
            $browser->loginAs($this->user)
                ->visit($this->page)
                ->assertSee('Settings')->pause(1000);
            $browser->clearVueAndNew('@site_name', fake()->name)
                ->clearVueAndNew('@currency', fake()->currencyCode)
                ->clearVueAndNew('@default_email', fake()->email)
                ->click('@sidebar_color')
                ->waitFor('.v-color-picker')
                ->within('.v-color-picker .v-color-picker__swatches', function (Browser $colorPicker) {
                    $colorPicker->click('div[style="background: rgb(232, 234, 246);"]');
                })
                ->click('@topbar_color')
                ->waitFor('.v-color-picker')
                ->within('.v-color-picker .v-color-picker__swatches', function (Browser $colorPicker) {
                    $colorPicker->click('div[style="background: rgb(232, 234, 246);"]')
                        ->pause('2000');
                })
                ->randomVSelect('#account_method')
                ->randomVSelect('#profit_percent')
                ->clearVueAndNew('@shipping_cost_label', fake()->name)
                ->clearVueAndNew('@quantity_label', fake()->name)
                ->randomVSelect('#purchase_payment_method')
                ->randomVSelect('#sale_payment_method')
                ->randomVSelect('#stock_out_sale')
                ->press('@submit_settings')
                ->pause(1000)
                ->seeSweetAlertSuccessMessage('Settings has been successfully updated');
        });
    }

    /**
     * @test
     */
    public function create_company_detail(): void
    {
        Setting::factory()->create(['company_id' => $this->user->company_id]);
        $this->browse(function (Browser $browser) {
            $browser->loginAs($this->user)
                ->visit($this->page)
                ->assertSee('Settings')->pause(1000)
                ->within('#company_detail', function (Browser $company_detail) {
                    $company_detail->clearVueAndNew('@cd_name', fake()->name)
                        ->clearVueAndNew('@cd_code', fake()->postcode)
                        ->clearVueAndNew('@cd_web_url', fake()->url)
                        ->clearVueAndNew('@cd_contact_name', fake()->name)
                        ->clearVueAndNew('@cd_address1', fake()->name)
                        ->clearVueAndNew('@cd_address2', fake()->name)
                        ->press('@cd_company_detail_submit');
                });

            $browser->seeSweetAlertSuccessMessage('Company Detail has been successfully updated');
        });
    }

}
